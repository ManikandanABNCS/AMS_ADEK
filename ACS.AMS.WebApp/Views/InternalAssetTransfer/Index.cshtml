@model IndexPageModel
@{
    ViewBag.Title = "Index";

}

<div class="list-container">

    @{
        DisplayHelper display = new DisplayHelper(this, "InternalAssetTransfer", "TransactionID");

        var gridCtrl = Html.Kendo().Grid<dynamic>()
        .Name("DetailsGrid");
        display.AddGridActionColumns(gridCtrl, Url, "InternalAssetTransferIndex", RightNames.InternalAssetTransfer, transactionRpt: true);
        display.ConfigureGrid(gridCtrl);
        display.AddGridHeaders(gridCtrl, Url, this.Html, RightNames.InternalAssetTransfer);

        gridCtrl.Render();
        //display.AddPopUpWindow(this.Html, "Division");

    }
   @*  @{
        var defaultToolBar = Html.Kendo().ToolBar()
        .Name("ToolBar")
        .HtmlAttributes(new { style = "width: 100%;" })
        .Items(items =>
        {
            items.Add().Type(Kendo.Mvc.UI.CommandType.Button).Text(Language.GetButtonText("AddNewRecord")).
        Id(Guid.NewGuid().ToString())
        .Template("<img src='/css/images/AddNewRecordIcon.png' alt ='icon' style='Width:30px;height:30px'/>")
        .HtmlAttributes(new { onclick = "gridButtonClicked(\"InternalAssetTransfer\",\"Create\")" });
        });
    }
    @(Html.Kendo().Grid(Model)
        .Name("DetailsGrid")
        .Columns(columns =>
        {

            columns.Bound(p => p.TransactionNo);
            columns.Bound(p => p.CreatedUSer).Title("Created By");
            columns.Bound(p => p.CreatedDateTime).Format("{0: " + CultureHelper.DateTimeFormat + "}").Title("Created On").Filterable(true);
            columns.Bound(p => p.Status);
            columns.Template("<center><a class='k-button-icontext' id='#=TransactionID#' href='javascript:AssetTransferReport(#=TransactionID#)'><img src='/css/images/Report.png' alt='icon' style='Width:15px;height:20px' /></a></center></text>")
            .Title(Language.GetString("Report")).Width(50);
            columns.Template("<center><a class='k-button-icontext' id='#=TransactionID#' href='javascript:AssetTransferView(#=TransactionID#)'><img src='/css/images/view.png' alt='icon' style='Width:15px;height:20px' /></a></center></text>")
            .Title(Language.GetString("Details")).Width(50);
            columns.Template("<center><a class='k-button-icontext' id='#=TransactionID#' href='javascript:AssetTransferEdit(#=TransactionID#)'><img src='/css/images/view.png' alt='icon' style='Width:15px;height:20px' /></a></center></text>")
            .Title(Language.GetString("Edit")).Width(50);

        })
        .ToolBar(toolbar =>
        {
            toolbar.ClientTemplate(defaultToolBar.ToClientTemplate().ToString());
        })

        .Filterable(filtering => filtering.Enabled(true).Operators(o =>
        {
            o.ForString(t => t
            .Clear()
            .Contains("Contains")
            .DoesNotContain("Does Not Contains")
            .IsEqualTo("Equal To")
            .IsNotEqualTo("Not EqualTo")
            .StartsWith("Starts With")
            .EndsWith("Ends With")
            );
        })
        )
        .Sortable().Selectable().Pageable()
        .Editable(editable => editable.Mode(GridEditMode.PopUp).DisplayDeleteConfirmation(false))
        .DataSource(datasource => datasource
        .Ajax().Model(p => p.Id(x => x.TransactionID)).PageSize(10)
        .Read(read => read.Action("_Index", "InternalAssetTransfer")))
        ) *@

</div>




<script>
    $(function () {
        setPageHeading("Internal Asset Transfer List");
    });
    function AssetTransferEdit(id) {
        loadContentPage("/InternalAssetTransfer/Edit?id=" + id);
    }
    function AssetTransferView(id) {
        loadContentPage("/InternalAssetTransfer/Details?id=" + id);
    }
    function ReportFunction(id) {
        var params = {
            paramName: "TransactionID",
            paramVal: id,
            reportName: "AssetTransferReceipt"
        };

        var url = '/ShowReport/ShowReceiptReport?' + jQuery.param(params);
        window.open(url);
    }
</script>
