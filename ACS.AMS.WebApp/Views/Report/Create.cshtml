@model ReportTable
@using ACS.AMS.DAL
@{
    ViewBag.Title = "Create";
}

<script>
    function onReportEdit(e) {
        var i = e.model.get("Type");
        if (i != "System.Int32") {
            $("#isSumField").attr('disabled', true);
        }
        if (i == "") {
            $("#isSumField").attr('disabled', false);
        }

        $(e.container).find("td:last").html("<a href='javascript: void(0)' class='abutton update' onclick='updateRow(this)' title='update'>button update</a> " +
            "<a href='javascript: void(0)' class='abutton cancel' onclick='cancelRow(this)' title='cancel'>button cancel</a>"
        );
    }

    function indexPageUnits(dataItem) {
        var data = $("#Grid").data("kendoGrid").dataSource.data();
        if ((dataItem.ReportPageUnit == "[object Object]") || (dataItem.ReportPageUnit == null))
            dataItem.ReportPageUnit = "";
        dataItem.Width = "";
        return data.indexOf(dataItem);
    }

    function addReportID() {
        return {
            text: $("#ReportID").val()

        };
    }
    function addReadID() {
        return {
            reportID: $("#ReportID").val()
        };
    }

    function clickAllColumns() {
        if ($("#ReportID").val()) {
            $.ajax({
                url: '/Report/EditingInline_Read',
                type: "get",
                async: false,
                data: { reportID: $("#ReportID").val() },
            });
            var grid = $("#Grid").data("kendoGrid");
            grid.dataSource.read();
        }
        else {

            showErrorMessage("Please select any one Report Name");

        }

    }
    $("#saveButton").click(function (e) {
        
        var lst = document.getElementById("lstSelectedGroupFields");

        if (lst.options.length <= 0) {
        }
        else {
        }
        if (lst.options.length <= 0) {

        } else {

            var hidText = document.getElementById("hdReportSelectedItems");
            var hid = document.getElementById("hdReportSelectedItemsIDS");
            if (lst.options.length > 0) {
                hidText.value = "";
                hid.value = "";
                for (i = 0; i < lst.options.length; i++) {
                    hidText.value += lst.options[i].text + ",";
                    hid.value += lst.options[i].value + ",";
                }
            }
        }

        var lstFields = document.getElementById("lstSelectedFields");

        if (lstFields.options.length <= 0) {
        }
        else {
        }
        if (lstFields.options.length <= 0) {

        } else {

            var hidFieldText = document.getElementById("hdReportSelectedFieldItems");
            var hidFieldValue = document.getElementById("hdReportSelectedFieldItemsIDS");
            if (lstFields.options.length > 0) {
                hidFieldText.value = "";
                hidFieldValue.value = "";
                for (i = 0; i < lstFields.options.length; i++) {
                    hidFieldText.value += lstFields.options[i].text + ",";
                    hidFieldValue.value += lstFields.options[i].value + ",";
                }
            }
        }
    });
</script>
@using (Html.AjaxBeginForm(DisplayHelper.GetAjaxOptions()))
    {

        <div class="list-container">
    <div class="validationMessage">
        @Html.ValidationSummary()
    </div>
    <div style="display: none">
        @Html.TextBox("hdReportSelectedItems")
        @Html.TextBox("hdReportSelectedItemsIDS")
        @Html.TextBox("hdReportSelectedFieldItems")
        @Html.TextBox("hdReportSelectedFieldItemsIDS")
        @Html.TextBox("hdReportConcatanatedVals")
    </div>

    @Html.HiddenFor(model => model.CurrentPageID)
    <div class="row">

        <div class="row">
                <div class="col-xl-3">
                @Html.Label(Language.GetString("Report Template"))
                @(Html.Kendo().MultiColumnComboBoxFor(model => model.ReportTemplateID)
                    .DataTextField("ReportTemplateName")
                    .DataValueField("ReportTemplateID")
                    .Columns(columns =>
                    {
                        columns.Add().Field("ReportTemplateName").Title("ReportTemplateName").Width("300px");
                        columns.Add().Field("ProcedureName").Title("ProcedureName").Width("300px");
                        columns.Add().Field("ReportTemplateFile").Title("ReportTemplateFile").Width("100px");
                    })
                    .AutoBind(false)
                    .Filter(FilterType.Contains).Events(eve => eve.Change("ChangeReportName")).HtmlAttributes(new { Style = "Width:100%" })
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetAllReportTemplate", "DataService");
                        }).ServerFiltering(true);
                    })

                    )
            </div>
            <div class="col-xl-3">
                @Html.FieldLabelFor(model => model.ReportName, true)
                @Html.TextBoxFor(model => model.ReportName, new { Class = "form-control" })

            </div>
            <div class="col-xl-3">
                @Html.FieldLabelFor(model => model.ReportTitle, true)

                @Html.TextBoxFor(model => model.ReportTitle, new { Class = "form-control" })
            </div>
            <div class="col-xl-3">
                @Html.Label(Language.GetString("Paper Size"))
                @(Html.Kendo().DropDownListFor(Model => Model.ReportPaperSizeID)
                    .HtmlAttributes(new { style = "width:100% !important" })
                    .BindTo(ComboBoxHelper.GetAllReportPage())
                    )
            </div>
            <div class="col-xl-3">
                @Html.Label(Language.GetString("LeftMargin:"))
                @Html.TextBoxFor(model => model.ReportLeftMargin, "{0:F2}", new { Class = "form-control", @style = "width:100% !important;display:inline-block;float:left;" })
            </div>
            <div class="col-xl-3">
                @Html.Label(Language.GetString("RightMargin:"))
                @Html.TextBoxFor(model => model.ReportRightMargin, "{0:F2}", new { Class = "form-control", @style = "width:100% !important;display:inline-block;" })
            </div>
            <div class="col-xl-3">
                @Html.Label(Language.GetString("TopMargin:"))
                @Html.TextBoxFor(model => model.ReportTopMargin, "{0:F2}", new { Class = "form-control", @style = "width:100% !important;display:inline-block;float:left;" })
            </div>
            <div class="col-xl-3">
                @Html.Label(Language.GetString("BottomMargin:"))
                @Html.TextBoxFor(model => model.ReportBottomMargin, "{0:F2}", new { Class = "form-control", @style = "width:100% !important;display:inline-block;" })
            </div>
             <div class="col-xl-3">
                    @Html.Label(Language.GetString("ReportPageHeight:"))
                @Html.TextBoxFor(model => model.ReportPageHeight, "{0:F2}", new { Class = "form-control", @style = "width:100% !important;display:inline-block;" })
            </div>
                <div class="col-xl-3">
                    @Html.Label(Language.GetString("ReportPageWidth:"))
                    @Html.TextBoxFor(model => model.ReportPageWidth, "{0:F2}", new { Class = "form-control", @style = "width:100% !important;display:inline-block;" })
                </div>
            <span style="color: red;">* All units are in Inches</span>
        </div>
        <div class="col-md-12">
            @{
                    AMSContext db = AMSContext.CreateNewContext();
            }
                <div class="col-md-12">
                @(Html.Kendo().TabStrip().Name("TabStrip").SelectedIndex(0).HtmlAttributes(new { style = "width:100%;" }).Items(tabstrip =>
                        {
                                tabstrip.Add().Text("Groups").HtmlAttributes(new { style = "color:Black;" })
                        .Content(@<text>

                                <div class="col-xl-12">
                                    @Language.GetString("(Optional)GroupTheInformationOnTheReport")
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                       <label class="listBoxHead">@Language.GetString("AvailableGroupFields:") </label>
                                            @{
                                                var avaliableGroupList = "";
                                            }
                                            @Html.ListBox("lstAvailableGroupFields", new SelectList(avaliableGroupList, "Value", "Text"), new { style = "width:260px;height:200px", @Class = "listBoxClass" })
                                            @*<%= Html.ListBox("lstAvailableGroupFields", new SelectList(avaliableList), new { @Class="listBoxClass" })*@
                                    </div>
                                        <div class="col-md-2" style="margin-top: 60px;">
                                        <table>
                                            <tr>
                                                <td>
                                                            <input type="button" title="@Language.GetToolTipText("SelectField") " value="→" class="t-button t-button-icon" onclick="addGroupTemplate()" />
                                                </td>
                                            </tr>
                                                    <tr>
                                                        <td>
                                                            <input type="button" title="@Language.GetToolTipText("RemoveField") " Value="←" class="t-button t-button-icon" onclick="delGroupTemplate()" />
                                                        </td>
                                                    </tr>
                                        </table>

                                              
                                    </div>
                                        <div class="col-md-4" style="margin-top: -40px;">
                                                <table>
                                                        <tr>
                                                        <td>
                                                            <input type="button" title="Select Field" class="t-button t-button-icon" onclick="Listbox_Move('lstSelectedGroupFields','up')" value="↑" />
                                                        </td>
                                                        <td>

                                                            <input type="button" title="Select Field" class="t-button t-button-icon" onclick="Listbox_Move('lstSelectedGroupFields','down')" value="↓" />
                                                        </td>
                                                    </tr>
                                                    
                                                </table>
                                                <label class="listBoxHead pull-left">
                                                    @Language.GetString("GroupBy:")
                                                </label>
                                                @{
                                                    var SelectedGroupList = "";
                                                }
                                                @Html.ListBox("lstSelectedGroupFields", new SelectList(SelectedGroupList, "Value", "Text"), new { style = "width:260px;height:200px", @Class = "listBoxClass" })
                                                @*<%=       Html.ListBox("lstSelectedGroupFields",new SelectList(SelectedList), new { @Class="listBoxClass"  })*@


                                        </div>
                                            <div id="issueDetails"> </div>
                                  
                                 </div>

                                        <div class="col-12 text-right add-action-btns">
                                            @* <button type="button" value="Back" title="Back" class="cancelButton"  onclick="clickoneback(event)">Back</button> *@
                                            <button type="button" value="Next" title="Next" class="saveButton" onclick="clickoneNext(event)">Next</button>
                                        </div>
                                       
                              



                            </text>);
                                tabstrip.Add().Text(Language.GetString("Fields")).HtmlAttributes(new { style = "color:white;" })
                        .Content(@<text>
                            <div>@Language.GetString("Choose the information to display the Report") </div>
                            <div style="height: 20px;"><span id="noneSelected" style="color: red;"></span></div>

                            <div class="row">
                                <div class="col-md-3">
                                        <label class="listBoxHead">@Language.GetString("AvailableFields:") </label>
                                        @{
                                                var avaliableList = "";
                                            }

                                            @Html.ListBox("lstAvailableFields", new SelectList(avaliableList), new { style = "width:260px;height:200px", @Class = "listBoxClass" })
                                </div>
                                        <div class="col-md-2" style="margin-top: 60px;">
                                            <table>
                                                <tr>
                                                    <td>
                                                        <input type="button" title="@Language.GetToolTipText("SelectField")" class="t-button t-button-icon" value="→" onclick="addReportFieldsTemplate('lstAvailableFields', 'lstSelectedFields')" />
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <input type="button" title="@Language.GetToolTipText("RemoveField")" class="t-button t-button-icon" value="←" onclick="delReportFieldTemplate('lstAvailableFields', 'lstSelectedFields')" />
                                                    </td>
                                                </tr>
                                            </table>
                                           
                                           
                                         
                                           
                                            
                                    </div>
                                        <div class="col-md-3" style="margin-top: -40px;">
                                            <table>
                                                <tr>
                                                    <td>
                                                        <input type="button" title="Select Field" class="t-button t-button-icon" onclick="Listbox_Move('lstSelectedFields','up')" value="↑" />
                                                    </td>
                                                    <td>
                                                        <input type="button" title="Select Field" class="t-button t-button-icon" onclick="Listbox_Move('lstSelectedFields','down')" value="↓" />
                                                    </td>
                                                </tr>
                                               
                                            </table>
                                            <label class="listBoxHead pull-left">
                                                @Language.GetString("SelectedFields:")
                                            </label>
                                            @{
                                                var SelectedList = "";
                                            }
                                            @Html.ListBox("lstSelectedFields",new SelectList(SelectedList), new { style = "width:260px;height:200px", @Class = "listBoxClass" })

                                </div>
                                        <div class="col-md-3">
                                            <label class="listBoxHead pull-left" style="margin-left: 20px;">
                                                @Language.GetString("FieldAttributes:")
                                            </label>
                                            <span>
                                                @Html.Label(Language.GetString("Width"))
                                                <br />
                                                @Html.TextBox("width_Textbox", "", new { @Class="form-control",onkeyup="return onkeyPressWidthTextBox()" , @style="width: 100% !important;"})
                                            </span>
                                        </div>
                             </div>
                                        <div class="col-12 text-right add-action-btns" style="padding-top: 10px">
                                            <button type="button" value="Back" title="Back" class="cancelButton" onclick="clickoneback(event)">Back</button>
                                            @* <button type="button" value="Next" title="Next" class="saveButton" onclick="clickoneNext(event)">Next</button> *@

                                        </div>
                         
                         
                              

                            </text>);
                        }))
            </div>




        </div>

    </div>

        <div class="row">
            <div class="col-xl-12 text-right add-action-btns">
                @Html.Kendo().Button().ThemeColor(ThemeColor.Primary).Content("Save").Name("saveButton").HtmlAttributes(new { type="submit", onclick="return addToReportColumnModel();" })
                @Html.Kendo().Button().ThemeColor(ThemeColor.Secondary).Content("Cancel").Name("cancelButton").HtmlAttributes(new { onclick="loadIndexPage('Report')" })
            </div>
        </div>
    </div>
}


<script language="javascript" type="text/javascript">
    $(function () {
        setInitialFocus("@(ViewData.ContainsKey("FocusControl") ? ViewData["FocusControl"] : "ReportTemplateID") ");
        setPageHeading("@Language.GetPageTitle("ReportCreate") ");
        $("#TabStrip").data("kendoTabStrip").select(0);
    });
  
    </script>